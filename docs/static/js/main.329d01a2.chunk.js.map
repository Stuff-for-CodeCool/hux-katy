{"version":3,"sources":["Culori.js","index.js"],"names":["Culori","props","contextValue","culoare","schimbaCuloarea","context","Provider","map","color","key","type","name","value","toLowerCase","onChange","checked","GeographiContext","createContext","AltContext","UndeSuntem","locatie","useContext","CumEAfara","vreme","Schimbator","schimbaLocatia","schimbaVremea","App","useState","setLocatie","setVreme","setCuloare","evt","target","render","document","getElementById"],"mappings":"yIA2BeA,EAzBA,SAACC,GAAW,IAAD,EACeA,EAAMC,aAAnCC,EADc,EACdA,QAASC,EADK,EACLA,gBAGjB,OACI,cAACH,EAAMI,QAAQC,SAAf,UACI,gCACI,2DAA8BH,KAL3B,CAAC,OAAQ,SAAU,WAAY,cAM1BI,KAAI,SAACC,EAAOC,GAAR,OACR,kCACI,uBACIC,KAAK,QACLC,KAAK,UACLC,MAAOJ,EAAMK,cACbC,SAAUV,EACVW,QAASZ,IAAYK,EAAMK,gBAE9BL,IAROC,YCJ1BO,EAAmBC,wBAAc,MACjCC,EAAaD,wBAAc,MAE3BE,EAAa,WAAO,IACdC,EAAYC,qBAAWL,GAAvBI,QAER,OACI,8BACI,8CAAiBA,QAKvBE,EAAY,WAAO,IACbC,EAAUF,qBAAWL,GAArBO,MAER,OACI,8BACI,0CAAaA,QAKnBC,EAAa,WAAO,IAAD,EACqCH,qBAAWL,GAA7DI,EADa,EACbA,QAASG,EADI,EACJA,MAAOE,EADH,EACGA,eAAgBC,EADnB,EACmBA,cAExC,OACI,gCACI,4BACI,kCACI,gDACA,yBAAQd,MAAOQ,EAASN,SAAUW,EAAlC,UACI,wBAAQb,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,YAAd,+BAIZ,4BACI,kCACI,0CACA,yBAAQA,MAAOW,EAAOT,SAAUY,EAAhC,UACI,wBAAQd,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,UAAd,iCAQlBe,EAAM,WAAO,IAAD,EACgBC,mBAAS,aADzB,mBACPR,EADO,KACES,EADF,OAEYD,mBAAS,WAFrB,mBAEPL,EAFO,KAEAO,EAFA,OAGgBF,mBAAS,QAHzB,mBAGPzB,EAHO,KAGE4B,EAHF,KAiBd,OACI,eAAC,aAAD,WACI,eAACf,EAAiBV,SAAlB,CACIM,MAAO,CAAEQ,UAASG,QAAOE,eAfrC,SAAwBO,GACpBH,EAAWG,EAAIC,OAAOrB,QAc2Bc,cAXrD,SAAuBM,GACnBF,EAASE,EAAIC,OAAOrB,SAShB,UAGI,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,OAGJ,cAAC,EAAD,CACIP,QAASa,EACThB,aAAc,CAAEC,UAASC,gBAhBrC,SAAyB4B,GACrBD,EAAWC,EAAIC,OAAOrB,eAqB9BsB,iBAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.329d01a2.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Culori = (props) => {\n    const { culoare, schimbaCuloarea } = props.contextValue;\n    const culori = [\"Rosu\", \"Galben\", \"Albastru\", \"Roz-bonbon\"];\n\n    return (\n        <props.context.Provider>\n            <div>\n                <h2>Culoarea mea preferata e {culoare}</h2>\n                {culori.map((color, key) => (\n                    <label key={key}>\n                        <input\n                            type=\"radio\"\n                            name=\"culoare\"\n                            value={color.toLowerCase()}\n                            onChange={schimbaCuloarea}\n                            checked={culoare === color.toLowerCase()}\n                        />\n                        {color}\n                    </label>\n                ))}\n            </div>\n        </props.context.Provider>\n    );\n};\n\nexport default Culori;\n","import React, { StrictMode, createContext, useContext, useState } from \"react\";\nimport { render } from \"react-dom\";\n\nimport \"./index.css\";\n\nimport Culori from \"./Culori\";\n\nconst GeographiContext = createContext(null);\nconst AltContext = createContext(null);\n\nconst UndeSuntem = () => {\n    const { locatie } = useContext(GeographiContext);\n\n    return (\n        <div>\n            <h1>Ne aflam la {locatie}</h1>\n        </div>\n    );\n};\n\nconst CumEAfara = () => {\n    const { vreme } = useContext(GeographiContext);\n\n    return (\n        <div>\n            <h2>Afara e {vreme}</h2>\n        </div>\n    );\n};\n\nconst Schimbator = () => {\n    const { locatie, vreme, schimbaLocatia, schimbaVremea } = useContext(GeographiContext);\n\n    return (\n        <div>\n            <p>\n                <label>\n                    <span>Unde suntem?</span>\n                    <select value={locatie} onChange={schimbaLocatia}>\n                        <option value=\"Locatia 1\">Locatia 1</option>\n                        <option value=\"Locatia 2\">Locatia 2</option>\n                        <option value=\"Locatia 3\">Locatia 3</option>\n                    </select>\n                </label>\n            </p>\n            <p>\n                <label>\n                    <span>Cum e?</span>\n                    <select value={vreme} onChange={schimbaVremea}>\n                        <option value=\"Vreme 1\">Vreme 1</option>\n                        <option value=\"Vreme 2\">Vreme 2</option>\n                        <option value=\"Vreme 3\">Vreme 3</option>\n                    </select>\n                </label>\n            </p>\n        </div>\n    );\n};\n\nconst App = () => {\n    const [locatie, setLocatie] = useState(\"Locatia 1\");\n    const [vreme, setVreme] = useState(\"Vreme 1\");\n    const [culoare, setCuloare] = useState(\"rosu\");\n\n    function schimbaLocatia(evt) {\n        setLocatie(evt.target.value);\n    }\n\n    function schimbaVremea(evt) {\n        setVreme(evt.target.value);\n    }\n\n    function schimbaCuloarea(evt) {\n        setCuloare(evt.target.value);\n    }\n\n    return (\n        <StrictMode>\n            <GeographiContext.Provider\n                value={{ locatie, vreme, schimbaLocatia, schimbaVremea }}\n            >\n                <Schimbator />\n                <UndeSuntem />\n                <CumEAfara />\n            </GeographiContext.Provider>\n\n            <Culori\n                context={AltContext}\n                contextValue={{ culoare, schimbaCuloarea }}\n            />\n        </StrictMode>\n    );\n};\n\nrender(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}